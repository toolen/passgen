name: CI

on: [push]

jobs:
  ci:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.12
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run black
        run: poetry run black . --check

      - name: Run isort
        run: poetry run isort . --check-only

      - name: Run flake8
        run: poetry run flake8 passgen/ tests/

      - name: Run pydocstyle
        run: poetry run pydocstyle --add-ignore=D104 passgen/

      - name: Run bandit
        run: poetry run bandit .

      - name: Run saftey
        run: poetry run safety check

      - name: Run mypy
        run: poetry run mypy --strict --ignore-missing-imports passgen

      - name: Test with pytest
        run: poetry run pytest --cov=passgen tests/

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: poetry run coveralls --service=github
